/**
 * [Tools] Accessibly hide elements
 *
 * Sometimes there are instances where an element needs to be hidden visually
 * but the content is important to screen readers and SEO robots.
 *
 * This fix allows content to be hidden in such a way that it assumes no space
 * in the view but is still accessible to screen readers - unlike simply using
 * display: none which most screen readers ignore.
 *
 * @package     mangui
 * @category    styles
 * @version     1.0.0.alpha.3
 * @since       1.0.0.alpha.3
 * @author      Andi North <andi@mangopear.co.uk>
 * @link        https://mangopear.co.uk/mangui/
 * @license     GNU General Public License <http://opensource.org/licenses/gpl-license.php>
 */


/**
 * CHANGELOG
 *
 * 1.0.0.alpha.3
 *          Init file
 */


/**
 * CONTENTS
 *
 * [1]  Hide content in an accessible way
 */


/**
 * [1]  Hide content in an accessible way
 *
 * 		To be used to hide strings of text in a
 * 		way that screen readers and search engines
 * 		can still access the content.
 *
 * 		@link https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
 *
 *    	@use:
 *     	@extend %u.hide;
 *
 * 		[a]	Allow u-hide classes to be breakpoint friendly - i.e.
 * 			`.u-palm--hide` would only hide an element when viewed on 'palm' sized devices
 */

.u-hide,
%u-hide,
.u-invisible,
%u-invisible {
	padding: 0 !important;
	width: 1px !important;
	height: 1px !important;
	margin: -1px !important;
	overflow: hidden !important;
	position: absolute !important;
	clip: rect(1px 1px 1px 1px) !important;
	clip: rect(1px, 1px, 1px, 1px) !important;
}


	@each $name in $breakpoint-has-widths { 					// [a]
		.u-#{$name}--hide {
			@include mangui-breakpoint($name) {
				padding: 0 !important;
				width: 1px !important;
				height: 1px !important;
				margin: -1px !important;
				overflow: hidden !important;
				position: absolute !important;
				clip: rect(1px 1px 1px 1px) !important;
				clip: rect(1px, 1px, 1px, 1px) !important;
			}
		}
	}